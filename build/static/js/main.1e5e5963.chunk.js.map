{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","showAddTask","setShowAddTask","useEffect","tasksList","JSON","parse","localStorage","getItem","Math","floor","random","newTask","oldTasks","push","setItem","stringify","length","delTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e5e5963.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color,text, onClick}) => {\r\n\r\n    \r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor: color}} className='btn'>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    \r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n/*\r\nconst headingStyle = {\r\n    color:'red',\r\n    backgroundColor:'black'\r\n}\r\n*/\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} \r\n                <FaTimes style={{ color: 'red', cursor: 'pointer'}} \r\n                onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n            <Task key={task.id} task={task} \r\n            onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text , day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from 'react'\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from './components/AddTask';\n\nfunction App() {\n\n\n  const [tasks,setTasks] = useState([])\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  useEffect(() => {\n    var tasksList = JSON.parse(localStorage.getItem('tasksArray')) || [];\n    setTasks(tasksList)\n    //console.log(tasks);\n  },[])\n  \n  /*\n  const [tasks,setTasks] = useState([\n\n    \n      {\n          id:1,\n          text: 'Doctors Appointment',\n          day: 'Feb 5th at 2:30pm',\n          reminder: true,\n      },\n      {\n          id: 2,\n          text: 'Meeting at School',\n          day: 'Feb 6th at 1:30pm',\n          reminder: true,\n      }\n      \n\n  ])\n  */\n  \n  \n\n\n\n// Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n\n  const newTask = { id, ...task }\n\n  const oldTasks = JSON.parse(localStorage.getItem('tasksArray')) || [];\n\n  oldTasks.push(newTask);\n\n  localStorage.setItem('tasksArray', JSON.stringify(oldTasks));\n\n  setTasks(oldTasks);\n\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  const delTask = tasks.filter((task) => task.id !== id);\n  \n\n  localStorage.setItem('tasksArray', JSON.stringify(delTask));\n\n  setTasks(delTask);\n\n}\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  \n  localStorage.setItem('tasksArray', JSON.stringify(tasks.map((task) => task.id === id \n  ?\n  {...task, reminder: !task.reminder }\n  : task)));\n\n  setTasks(JSON.parse(localStorage.getItem('tasksArray')));\n\n}\n\n// && in the showAddTask line is short for a ternary with no else\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      { tasks.length > 0 ? \n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n      : (\n        'No Tasks to Show'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}